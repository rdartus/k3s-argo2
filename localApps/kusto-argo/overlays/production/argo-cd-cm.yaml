apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  # namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
data:
  application.resourceTrackingMethod: annotation
  admin.enabled: 'false'
  statusbadge.enabled: 'true'
  users.anonymous.enabled: 'true'
  timeout.reconciliation: "600s"
  ga.trackingid: 'UA-105170809-6'
  url: https://cd.apps.argoproj.io
  configManagementPlugins: |
    - name: flux
      generate:
        command: [sh, -c]
        args: ["argocd-flux-plugin . --path $GIT_PATH"]
  dex.config: |
    connectors:
    - type: github
      id: github
      name: GitHub
      config:
        clientID: fb563b3a8dd7ea52f683
        clientSecret: $dex.github.clientSecret
        orgs:
        - name: argoproj
          teams:
          - argo-cd-admins
  resource.customizations: |
    argoproj.io/Application:
      health.lua: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs
    networking.k8s.io/Ingress:
      health.lua: |
        hs = {}
        hs.status = "Healthy"
        return hs
    postgresql.cnpg.io/Cluster:
      health.lua: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""

        if obj.status ~= nil then
          if obj.status.instances ~= nil then
            local numberInstance = obj.status.instances
            if obj.status.instancesStatus ~= nil then
              if obj.status.instancesStatus.healthy ~= nil then
                for i, instance in ipairs(obj.status.instancesStatus.healthy) do
                  if i == numberInstance then
                    hs.status = "Healthy"
                    hs.message = obj.status.phase
                  end
                end 
              end
            end
          end
        end

        return hs